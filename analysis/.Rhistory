facet_wrap(~country_name_nl, scales = "free_x")
View(df_gas_diff)
countries_middle <- df_gas_diff %>%
filter(diff > -0.15  & diff < 0.15)
## plot
df_plot <- df_gas_storage %>%
filter(country %in% countries_middle$country)
## plot graph
baseLinePlot +
geom_area(
data = subset(df_plot, year == 2020),
aes(x = plot_date, y = full_avg * 100),
fill = "white") +
geom_line(
data = df_plot,
aes(x = plot_date, y = full * 100, group = year, colour = year >= 2022, size = year >= 2022)) +
geom_text(
data = subset(df_plot, gasDayStartedOn == max(gasDayStartedOn, na.rm = T)),
aes(x = plot_date, y = full * 100, label = paste0(round(full * 100), "%")),
size = 4, colour = "black", hjust = 0, nudge_y = -10, fontface = "bold") +
facet_wrap(~country_name_nl, scales = "free_x")
countries_middle <- df_gas_diff %>%
filter(diff >= 0.15)
## plot
df_plot <- df_gas_storage %>%
filter(country %in% countries_middle$country)
## plot graph
baseLinePlot +
geom_area(
data = subset(df_plot, year == 2020),
aes(x = plot_date, y = full_avg * 100),
fill = "white") +
geom_line(
data = df_plot,
aes(x = plot_date, y = full * 100, group = year, colour = year >= 2022, size = year >= 2022)) +
geom_text(
data = subset(df_plot, gasDayStartedOn == max(gasDayStartedOn, na.rm = T)),
aes(x = plot_date, y = full * 100, label = paste0(round(full * 100), "%")),
size = 4, colour = "black", hjust = 0, nudge_y = -10, fontface = "bold") +
facet_wrap(~country_name_nl, scales = "free_x")
## export data for european gas storage levels
df_gas_storage_eu %>%
select(plot_date, year, full, full_avg) %>%
spread(year, full) %>%
filter(!is.na(plot_date)) %>%
write.csv("export/dw-1.csv", row.names = F)
library(eurostat)
# df_eurostat_toc
df_monthly_consumption <- get_eurostat("nrg_cb_gasm", type = "label") %>%
mutate(
geo = gsub("Germany \\(until 1990 former territory of the FRG\\)","Germany", geo),
plot_date = lubridate::ymd(paste0("2021-",format(time, "%m-%d"))),
year = lubridate::year(time)
) %>%
filter(nrg_bal == "Inland consumption - observed") %>%
filter(unit == "Terajoule (gross calorific value - GCV)") %>%
rename(values_tj = values) %>%
select(-unit) %>%
mutate(values_gwh = values_tj / 3.6)
glimpse(df_monthly_consumption)
df_test <- df_monthly_consumption %>%
filter(year <= 2020 & year >= 2015) %>%
group_by(geo, year) %>%
summarise(values_gwh = sum(values_gwh, na.rm = T)) %>%
ungroup() %>%
group_by(geo) %>%
# filter(geo %in% c("Belgium","France","Netherlands")) %>%
summarise(meanConsumptionTWh = mean(values_gwh, na.rm = T)) %>%
ungroup() %>%
mutate(meanConsumptionTWh = meanConsumptionTWh / 1000) %>%
inner_join(df_gas_storage %>% filter(gasDayStartedOn == max(gasDayStartedOn)) %>% distinct(country_name, workingGasVolume), by = c("geo"="country_name")) %>%
mutate(storagePerc = as.numeric(workingGasVolume) / meanConsumptionTWh * 100) %>%
arrange(-storagePerc)
View(df_test)
df_gas_storage %>%
filter(year>=2021 & !is.na(full) & plot_date != "2021-02-28") %>%
filter(country_name_nl == "Europese Unie") %>%
arrange(-year, currentLevel, desc(plot_date)) %>%
ungroup() %>%
select(country_name_nl, plot_date, year, full, full_avg, full_min, full_max) %>%
mutate(
full = full * 100,
full_avg = full_avg * 100,
full_min = full_min * 100,
full_max = full_max * 100
) %>%
spread(year, full) %>%
write_csv("graphics.csv")
df_test <- df_monthly_consumption %>%
filter(year <= 2020 & year >= 2015) %>%
group_by(geo, year) %>%
summarise(values_gwh = sum(values_gwh, na.rm = T)) %>%
ungroup() %>%
group_by(geo) %>%
# filter(geo %in% c("Belgium","France","Netherlands")) %>%
summarise(meanConsumptionTWh = mean(values_gwh, na.rm = T)) %>%
ungroup() %>%
mutate(meanConsumptionTWh = meanConsumptionTWh / 1000) %>%
inner_join(df_gas_storage %>% filter(gasDayStartedOn == max(gasDayStartedOn)) %>% distinct(country_name, workingGasVolume), by = c("geo"="country_name")) %>%
mutate(storagePerc = as.numeric(workingGasVolume) / meanConsumptionTWh * 100) %>%
arrange(-storagePerc)
df_avg_consumption <- df_monthly_consumption %>%
group_by(geo, plot_date) %>%
summarise(avg_values = mean(values_gwh[year != 2021], na.rm = TRUE)) %>%
ungroup()
df_avg_consumption %>%
filter(geo %in% c("Belgium","France","Netherlands","Germany","European Union - 27 countries (from 2020)")) %>%
ggplot(aes(x = plot_date, y = avg_values)) +
geom_area(alpha = 0.2) +
geom_line(linetype = "11") +
scale_x_date(date_labels = "%b") +
facet_wrap(~geo, scales = "free") +
labs(
x = "", y = "",
subtitle = "Monthly consumption natural gas, in GWh",
caption = "Source: Eurostat"
) +
theme_minimal() +
theme(legend.position = "top")
df_avg_consumption <- df_monthly_consumption %>%
group_by(geo, plot_date) %>%
summarise(avg_values = mean(values_gwh[year != 2022], na.rm = TRUE)) %>%
ungroup()
df_avg_consumption %>%
filter(geo %in% c("Belgium","France","Netherlands","Germany","European Union - 27 countries (from 2020)")) %>%
ggplot(aes(x = plot_date, y = avg_values)) +
geom_area(alpha = 0.2) +
geom_line(linetype = "11") +
scale_x_date(date_labels = "%b") +
facet_wrap(~geo, scales = "free") +
labs(
x = "", y = "",
subtitle = "Monthly consumption natural gas, in GWh",
caption = "Source: Eurostat"
) +
theme_minimal() +
theme(legend.position = "top")
df_test <- df_monthly_consumption %>%
filter(year <= 2020 & year >= 2015) %>%
group_by(geo, year) %>%
summarise(values_gwh = sum(values_gwh, na.rm = T)) %>%
ungroup() %>%
group_by(geo) %>%
# filter(geo %in% c("Belgium","France","Netherlands")) %>%
summarise(meanConsumptionTWh = mean(values_gwh, na.rm = T)) %>%
ungroup() %>%
mutate(meanConsumptionTWh = meanConsumptionTWh / 1000) %>%
inner_join(df_gas_storage %>% filter(gasDayStartedOn == max(gasDayStartedOn)) %>% distinct(country_name, workingGasVolume), by = c("geo"="country_name")) %>%
mutate(storagePerc = as.numeric(workingGasVolume) / meanConsumptionTWh * 100) %>%
arrange(-storagePerc)
df_monthly_consumption %>%
filter(year <= 2020 & year >= 2015) %>%
group_by(geo, year) %>%
summarise(values_gwh = sum(values_gwh, na.rm = T)) %>%
ungroup() %>%
group_by(geo) %>%
# filter(geo %in% c("Belgium","France","Netherlands")) %>%
summarise(meanConsumptionTWh = mean(values_gwh, na.rm = T)) %>%
ungroup() %>%
mutate(meanConsumptionTWh = meanConsumptionTWh / 1000) %>%
inner_join(df_gas_storage %>% filter(gasDayStartedOn == max(gasDayStartedOn)) %>% distinct(country_name, workingGasVolume), by = c("geo"="country_name")) %>%
mutate(storagePerc = as.numeric(workingGasVolume) / meanConsumptionTWh * 100) %>%
arrange(-storagePerc)
df_avg_consumption <- df_monthly_consumption %>%
group_by(geo, plot_date) %>%
summarise(avg_values = mean(values_gwh[year != 2022], na.rm = TRUE)) %>%
ungroup()
df_avg_consumption %>%
filter(geo %in% c("Belgium","France","Netherlands","Germany","European Union - 27 countries (from 2020)")) %>%
ggplot(aes(x = plot_date, y = avg_values)) +
geom_area(alpha = 0.2) +
geom_line(linetype = "11") +
scale_x_date(date_labels = "%b") +
facet_wrap(~geo, scales = "free") +
labs(
x = "", y = "",
subtitle = "Monthly consumption natural gas, in GWh",
caption = "Source: Eurostat"
) +
theme_minimal() +
theme(legend.position = "top")
eu_values <- df_gas_storage_eu %>%
filter(gasDayStartedOn == max(gasDayStartedOn)) %>%
select(gasInStorage, full) %>%
mutate(
gasInStorage = as.numeric(gasInStorage),
geo = "European Union - 27 countries (from 2020)",
country_name_nl = "Europese Unie"
)
current_storage_values <- df_gas_storage %>%
group_by(geo = country_name, country_name_nl) %>%
filter(gasDayStartedOn == max(gasDayStartedOn)) %>%
ungroup() %>%
select(geo, country_name_nl, gasInStorage, full) %>%
# bind_rows(eu_values) %>%
filter(!is.na(full))
winter_consumption <-  df_avg_consumption %>%
filter(plot_date == "2021-01-01" | plot_date >= "2021-11-01") %>%
group_by(geo) %>%
summarise(winterConsumptionGWh = sum(avg_values)) %>%
mutate(dailyWinterConsumptionGWh = winterConsumptionGWh/(92)) %>%  # 92 days in nov, dec and jan
inner_join(current_storage_values, by = "geo") %>%
mutate(
consumptionDays = gasInStorage * 1000 / dailyWinterConsumptionGWh
)
winter_consumption %>%
ggplot(aes(x = reorder(country_name_nl, consumptionDays), y = consumptionDays)) +
geom_col() +
geom_text(aes(label = round(consumptionDays, 0)), hjust = 1.1, size = 3, col = "white") +
coord_flip() +
labs(
x = NULL, y = NULL,
subtitle = "Hoeveel winterdagen kan elk land \nmet zijn huidige voorraden consumeren?"
)
winter_consumption %>%
write.csv("export/dw-3.csv", row.names = F)
winter_consumption %>%
mutate(
gasInStorage = gasInStorage * 1000,
`/` = "/",
`=` = "="
) %>%
select(LAND = country_name_nl, `RESERVE (GWh)` = gasInStorage,`/`, `GEM. VERBRUIK WINTERDAG (GWh)` = dailyWinterConsumptionGWh,`=`,`AANTAL DAGEN`=consumptionDays) %>%
write.csv("export/table.csv", row.names = F)
winter_consumption %>%
ggplot(aes(x = reorder(country_name_nl, consumptionDays), y = consumptionDays)) +
geom_col() +
geom_text(aes(label = round(consumptionDays, 0)), hjust = 1.1, size = 3, col = "white") +
coord_flip() +
labs(
x = NULL, y = NULL,
subtitle = "Hoeveel winterdagen kan elk land \nmet zijn huidige voorraden consumeren?"
)
winter_consumption %>%
mutate(
gasInStorage = gasInStorage * 1000,
`/` = "/",
`=` = "="
) %>%
select(LAND = country_name_nl, `RESERVE (GWh)` = gasInStorage,`/`, `GEM. VERBRUIK WINTERDAG (GWh)` = dailyWinterConsumptionGWh,`=`,`AANTAL DAGEN`=consumptionDays) %>%
write.csv("export/table.csv", row.names = F)
current_storage_values <- df_gas_storage %>%
group_by(geo = country_name, country_name_nl) %>%
filter(gasDayStartedOn == max(gasDayStartedOn)) %>%
ungroup() %>%
select(geo, country_name_nl, gasInStorage, full) %>%
filter(!is.na(full))
winter_consumption <-  df_avg_consumption %>%
filter(plot_date == "2021-01-01" | plot_date >= "2021-11-01") %>%
group_by(geo) %>%
summarise(winterConsumptionGWh = sum(avg_values)) %>%
mutate(dailyWinterConsumptionGWh = winterConsumptionGWh/(92)) %>%  # 92 days in nov, dec and jan
inner_join(current_storage_values, by = "geo") %>%
mutate(
consumptionDays = gasInStorage * 1000 / dailyWinterConsumptionGWh
)
winter_consumption %>%
ggplot(aes(x = full, y = consumptionDays)) +
geom_smooth(method = "lm", se = F, col = "blue", size = 0.4) +
geom_point(col = "red") +
ggrepel::geom_text_repel(aes(label = country_name_nl), size = 2.5) +
ylim(0,200)
filter_countries <- c("European Union - 27 countries (from 2020)")
df_monthly_consumption %>%
filter(geo %in% filter_countries) %>%
ggplot() +
geom_area(data = subset(df_avg_consumption, geo %in% filter_countries),
aes(x = plot_date, y = avg_values/1000), col = "black", linetype = "11", alpha = 0.1) +
geom_line(aes(x = plot_date, y = values_gwh/1000, col = as.factor(year)), alpha = 0.6, size = 0.8) +
gghighlight::gghighlight(year >= 2020, use_direct_label = F) +
scale_x_date(date_labels = "%b") +
facet_wrap(~geo, scales = "free") +
labs(
x = "", y = "",
subtitle = "Monthly consumption natural gas, in TWh",
caption = "Source: Eurostat"
) +
scale_color_manual(values = c("orange","blue")) +
theme_minimal() +
theme(
legend.position = "top",
panel.grid.minor.y = element_blank()
)
gas_price %>%
ggplot(aes(x = date, y = price)) +
geom_vline(xintercept = seq.Date(ymd("2020-01-01"),ymd("2023-01-01"), "year"), size = 0.2) +
geom_area(alpha = 0.4) +
geom_line() +
scale_x_date(date_labels = "%b %y") +
scale_y_continuous(limits = c(0,200), expand = c(0,0))
avg_gas <- df_gas_storage %>%
filter(country == "EU") %>%
distinct(country, plot_date, full_avg, full_min, full_max) %>%
filter(!is.na(plot_date))
gas_projection <- df_gas_storage %>%
mutate(trend = as.numeric(trend) / 100) %>%
filter(country == "EU") %>%
group_by(country) %>%
arrange(gasDayStartedOn) %>%
mutate(
ra7_trend = runMean(trend, 7),
# ra7_trend = mean(trend[year == 2022]),
# ra7_trend = trend,
last_available_date = max(gasDayStartedOn, na.rm = T)
) %>%
tidyr::complete(gasDayStartedOn = seq.Date(from = max(gasDayStartedOn, na.rm = T), to = ymd("2022-12-31"), by="day")) %>%
arrange(gasDayStartedOn) %>%
fill(year, country, full, ra7_trend, last_available_date) %>%
filter(year == 2022) %>%
distinct(country, gasDayStartedOn, last_available_date, full, trend, ra7_trend) %>%
arrange(gasDayStartedOn) %>%
mutate(
nday = as.numeric(gasDayStartedOn - last_available_date),
full = ifelse(nday > 0, full + nday * ra7_trend, full),
category = ifelse(nday > 0, "projection", "full"),
plot_date = as.Date(format(gasDayStartedOn, "2021-%m-%d"))
) %>%
ungroup() %>%
left_join(avg_gas) %>%
mutate(diff = full - full_min) %>%
slice(0 : which.max(diff >= 0))
gas_projection %>%
ggplot(aes(x = plot_date)) +
geom_ribbon(data = avg_gas, aes(ymin = full_min, ymax = full_max), alpha = 0.5) +
geom_line(aes(y = full, linetype = category)) +
geom_point(data = subset(gas_projection, gasDayStartedOn == max(gasDayStartedOn)), aes(y = full)) +
geom_text(data = subset(gas_projection, gasDayStartedOn == max(gasDayStartedOn)),
aes(y = full, label = gasDayStartedOn), hjust = 0, nudge_x = 2.5) +
scale_x_date(date_labels = "%b", expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format()) +
facet_wrap(~country) +
labs(x = NULL, y = NULL, subtitle = "Yearly gas in storage (%) in the EU") +
theme(
legend.position = "top"
)
df_gas_storage %>%
arrange(gasDayStartedOn) %>%
filter(country == "EU" & !is.na(withdrawal)) %>%
filter(plot_date <= "2021-03-01" & year >= 2021) %>%
ggplot(aes(x = plot_date, y = cumWithdrawal)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.2, fill = "grey") +
geom_line(aes(y = withdrawal_avg), colour = "grey") +
geom_line(aes(colour = factor(year))) +
gghighlight(year >= 2021) +
scale_x_date(date_labels = "%d %b", expand = c(0,0))
df_gas_storage %>%
arrange(gasDayStartedOn) %>%
filter(country == "EU" & !is.na(withdrawal)) %>%
filter(plot_date <= "2021-03-01" & year >= 2021) %>%
select(plot_date, year, cumWithdrawal, withdrawal_min, withdrawal_max, withdrawal_avg) %>%
spread(year, cumWithdrawal) %>%
write_csv("datawrapper-withdrawal.csv")
df_gas_withdrawal_eu <- df_gas_storage %>%
arrange(gasDayStartedOn) %>%
filter(country == "EU" & !is.na(withdrawal)) %>%
filter(plot_date <= "2021-03-01" & year >= 2021)
df_gas_withdrawal_eu %>%
ggplot(aes(x = plot_date, y = cumWithdrawal)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.2, fill = "grey") +
geom_line(aes(y = withdrawal_avg), colour = "grey") +
geom_line(aes(colour = factor(year))) +
gghighlight(year >= 2021) +
scale_x_date(date_labels = "%d %b", expand = c(0,0))
df_gas_withdrawal_eu %>%
select(plot_date, year, cumWithdrawal, withdrawal_min, withdrawal_max, withdrawal_avg) %>%
spread(year, cumWithdrawal) %>%
write_csv("datawrapper-withdrawal.csv")
df_gas_withdrawal_eu <- df_gas_storage %>%
filter(country == "EU" & !is.na(withdrawal)) %>%
filter(plot_date <= "2021-03-01" & year >= 2021)
df_gas_withdrawal_eu %>%
ggplot(aes(x = plot_date, y = cumWithdrawal)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.2, fill = "grey") +
geom_line(aes(y = withdrawal_avg), colour = "grey") +
geom_line(aes(colour = factor(year))) +
gghighlight(year >= 2021) +
scale_x_date(date_labels = "%d %b", expand = c(0,0))
df_gas_withdrawal_eu %>%
select(plot_date, year, cumWithdrawal, withdrawal_min, withdrawal_max, withdrawal_avg) %>%
spread(year, cumWithdrawal) %>%
write_csv("datawrapper-withdrawal.csv")
View(df_gas_storage)
## last available data for each country
df_gas_latest <- df_gas_storage %>%
filter(gasDayStartedOn == max(gasDayStartedOn, na.rm = T) & full > 0)
## data for Europe
df_gas_storage_eu <- df_gas_storage %>%
filter(country == "EU")
## withdrawal data for Europe
df_gas_withdrawal_eu <- df_gas_storage %>%
filter(country == "EU" & !is.na(withdrawal)) %>%
filter(plot_date <= "2021-03-01" & year >= 2021)
df_gas_withdrawal_eu %>%
ggplot(aes(x = plot_date, y = cumWithdrawal)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.2, fill = "grey") +
geom_line(aes(y = withdrawal_avg), colour = "grey") +
geom_line(aes(colour = factor(year))) +
gghighlight(year >= 2021) +
scale_x_date(date_labels = "%d %b", expand = c(0,0))
avg_withdrawals <- df_gas_storage %>%
group_by(plot_date, country) %>%
summarise(
avg_withdrawal = (mean(withdrawal[year>=2022-5], na.rm = T) - mean(injection[year>=2022-5], na.rm = T))/ 1000,
withdrawal_min = min(gasInStorage[year>=2015 & year<=2020]),
withdrawal_max = max(gasInStorage[year>=2015 & year<=2020])
) %>%
ungroup()
df_test <- df_gas_storage %>%
group_by(country) %>%
tidyr::complete(gasDayStartedOn = seq.Date(from = max(gasDayStartedOn, na.rm = T), to = ymd("2022-12-31"), by="day")) %>%
arrange(gasDayStartedOn) %>%
fill(year, gasInStorage) %>%
mutate(plot_date = as.Date(paste0("2021-", format(gasDayStartedOn,"%m-%d")))) %>%
ungroup() %>%
filter(country %in% c("EU")) %>%
filter(year >= 2022) %>%
select(-c(withdrawal_min, withdrawal_max)) %>%
left_join(avg_withdrawals, by = c("plot_date","country")) %>%
select(country, plot_date, gasDayStartedOn, gasInStorage, avg_withdrawal, withdrawal_min, withdrawal_max) %>%
group_by(country) %>%
mutate(
avg_withdrawal = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), avg_withdrawal, 0),
category = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), "projection", "gasInStorage"),
gasInStorage = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), gasInStorage - cumsum(avg_withdrawal), gasInStorage),
diff = gasInStorage - withdrawal_min
)
intersection_point <- df_test %>%
slice(0 : which.max(diff >= 0)) %>%
filter(gasDayStartedOn == max(gasDayStartedOn))
df_test %>%
ggplot(aes(x = gasDayStartedOn)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.5) +
geom_line(aes(y = gasInStorage, colour = category)) +
geom_point(data = intersection_point, aes(y = gasInStorage)) +
geom_text(data = intersection_point, aes(y = gasInStorage, label = gasDayStartedOn), hjust = 0, nudge_x = 2.5) +
facet_wrap(~country, scales = "free_y", ncol = 1) +
scale_x_date(date_labels = '%b', breaks = seq.Date(from = ymd("2022-01-01"), to = ymd("2022-12-01"), by = "1 month")) +
theme(legend.position = "top")
## calculate avg withdrawals based on the 2015-20 range
avg_withdrawals <- df_gas_storage %>%
group_by(plot_date, country) %>%
summarise(
avg_withdrawal = (mean(withdrawal[year>=2022-5], na.rm = T) - mean(injection[year>=2022-5], na.rm = T))/ 1000,
withdrawal_min = min(gasInStorage[year>=2015 & year<=2020]),
withdrawal_max = max(gasInStorage[year>=2015 & year<=2020])
) %>%
ungroup()
## calculate projection till end of year
df_gas_projection <- df_gas_storage %>%
group_by(country) %>%
tidyr::complete(gasDayStartedOn = seq.Date(from = max(gasDayStartedOn, na.rm = T), to = ymd("2022-12-31"), by="day")) %>%
arrange(gasDayStartedOn) %>%
fill(year, gasInStorage) %>%
mutate(plot_date = as.Date(paste0("2021-", format(gasDayStartedOn,"%m-%d")))) %>%
ungroup() %>%
filter(country %in% c("EU")) %>%
filter(year >= 2022) %>%
select(-c(withdrawal_min, withdrawal_max)) %>%
left_join(avg_withdrawals, by = c("plot_date","country")) %>%
select(country, plot_date, gasDayStartedOn, gasInStorage, avg_withdrawal, withdrawal_min, withdrawal_max) %>%
group_by(country) %>%
mutate(
avg_withdrawal = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), avg_withdrawal, 0),
category = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), "projection", "gasInStorage"),
gasInStorage = ifelse(gasDayStartedOn > max(df_gas_storage$gasDayStartedOn, na.rm = T), gasInStorage - cumsum(avg_withdrawal), gasInStorage),
diff = gasInStorage - withdrawal_min
)
## calculate when projection will hit the 2015-20 range
intersection_point <- df_gas_projection %>%
slice(0 : which.max(diff >= 0)) %>%
filter(gasDayStartedOn == max(gasDayStartedOn))
## plot graph
df_gas_projection %>%
ggplot(aes(x = gasDayStartedOn)) +
geom_ribbon(aes(ymin = withdrawal_min, ymax = withdrawal_max), alpha = 0.5) +
geom_line(aes(y = gasInStorage, colour = category)) +
geom_point(data = intersection_point, aes(y = gasInStorage)) +
geom_text(data = intersection_point, aes(y = gasInStorage, label = gasDayStartedOn), hjust = 0, nudge_x = 2.5) +
facet_wrap(~country, scales = "free_y", ncol = 1) +
scale_x_date(date_labels = '%b', breaks = seq.Date(from = ymd("2022-01-01"), to = ymd("2022-12-01"), by = "1 month")) +
theme(legend.position = "top")
gazprom_gas_physical %>%
filter(date_floor >= "2021-06-01" & date_floor < floor_date(Sys.Date(), "1 week")) %>%
ggplot(aes(x = date_floor, y = value, fill = category)) +
geom_col()
gazprom_gas_physical <- data.frame()
## Loop over all the years we want to collect
for (i in seq(2021, 2022)) {
url <- paste0("https://www.gazprom.com/investors/disclosure/actual-supplies/", i)
df_temp <-read_html(url) %>%
html_elements(".text_data") %>%
html_table(fill = T) %>%
bind_rows()
gazprom_gas_physical <- bind_rows(gazprom_gas_physical, df_temp)
}
gazprom_gas_physical <- gazprom_gas_physical %>%
mutate(
Date = as.Date(Date, "%b %d, %Y"),
date_floor = floor_date(Date, "1 week")
) %>%
gather("category","value", -c(Date, date_floor)) %>%
group_by(date_floor, category) %>%
summarise(value = sum(value, na.rm = T))
gazprom_gas_physical %>%
filter(date_floor >= "2021-06-01" & date_floor < floor_date(Sys.Date(), "1 week")) %>%
ggplot(aes(x = date_floor, y = value, fill = category)) +
geom_col()
gazprom_gas_physical %>%
spread(category, value) %>%
`colnames<-`(c("date_floor", "Door Wit-Rusland (YAMAL-Europe)", "Door Oekraïne", "Nordstream, Turkstream en door Baltische regio")) %>%
filter(year(date_floor) >= "2021" & date_floor < floor_date(Sys.Date(), "1 week")) %>%
write_csv("export/physical-gazprom.csv")
